[{"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\index.js":"1","C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\actions\\index.js":"2","C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\reducers\\index.js":"3","C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\components\\App.js":"4","C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\components\\SongList.js":"5","C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\components\\SongDetail.js":"6","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\index.js":"7","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\App.js":"8","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\reducers\\index.js":"9","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\actions\\index.js":"10","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Doll\\DollList.js":"11","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Doll\\DollCard.js":"12","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\actions\\types.js":"13","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\reducers\\filtersReducer.js":"14","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\reducers\\dollsReducer.js":"15","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\MenuBar.js":"16","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Doll\\DollDetailModal.js":"17","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\common\\util.js":"18","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Filter\\FilterDropdown.js":"19","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Filter\\FilterModal.js":"20","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\SemanticField.js":"21","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\DefaultModal.js":"22"},{"size":334,"mtime":1607457773223,"results":"23","hashOfConfig":"24"},{"size":162,"mtime":1607457832325,"results":"25","hashOfConfig":"24"},{"size":498,"mtime":1607457762857,"results":"26","hashOfConfig":"24"},{"size":234,"mtime":1607457897605,"results":"27","hashOfConfig":"24"},{"size":949,"mtime":1607459921315,"results":"28","hashOfConfig":"24"},{"size":482,"mtime":1607461169585,"results":"29","hashOfConfig":"24"},{"size":334,"mtime":1607457773223,"results":"30","hashOfConfig":"31"},{"size":441,"mtime":1610570532132,"results":"32","hashOfConfig":"31"},{"size":352,"mtime":1610566286763,"results":"33","hashOfConfig":"31"},{"size":460,"mtime":1609804412603,"results":"34","hashOfConfig":"31"},{"size":841,"mtime":1610135004919,"results":"35","hashOfConfig":"31"},{"size":1033,"mtime":1609192607762,"results":"36","hashOfConfig":"31"},{"size":172,"mtime":1609190388689,"results":"37","hashOfConfig":"31"},{"size":583,"mtime":1609806893514,"results":"38","hashOfConfig":"31"},{"size":4171,"mtime":1610572031006,"results":"39","hashOfConfig":"31"},{"size":1256,"mtime":1610571873287,"results":"40","hashOfConfig":"31"},{"size":695,"mtime":1610630936431,"results":"41","hashOfConfig":"31"},{"size":336,"mtime":1610396786601,"results":"42","hashOfConfig":"31"},{"size":1796,"mtime":1610572062160,"results":"43","hashOfConfig":"31"},{"size":4945,"mtime":1610571848467,"results":"44","hashOfConfig":"31"},{"size":971,"mtime":1610568105665,"results":"45","hashOfConfig":"31"},{"size":719,"mtime":1610631003512,"results":"46","hashOfConfig":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"vw7sas",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"n1kal4",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\index.js",[],["96","97"],"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\actions\\index.js",[],"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\reducers\\index.js",[],"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\components\\App.js",["98","99"],"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\components\\SongList.js",[],"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\components\\SongDetail.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\index.js",[],["100","101"],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\App.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\reducers\\index.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\actions\\index.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Doll\\DollList.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Doll\\DollCard.js",["102"],"import React from 'react';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport DollDetailModal from './DollDetailModal';\r\n\r\nconst DollCard = prop => {\r\n\r\n    const { doll } = prop;\r\n    const { specialYn, img, name, type, series, date } = doll;\r\n\r\n    const showSpecialTag = (specialYn) => {\r\n        const specialCorner = { as: 'a', corner: 'left', icon: 'star', color: 'yellow' };\r\n        return (specialYn === 'Y') ? specialCorner : false;\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <DollDetailModal\r\n                trigger={<Image src={img} wrapped ui={false} fluid label={showSpecialTag(specialYn)} />}\r\n                doll={doll} />\r\n            <Card.Content>\r\n                <Card.Header>{name} {type}</Card.Header>\r\n                <Card.Meta>{series}\r\n                </Card.Meta>\r\n                <Card.Description>\r\n                    <span className='date'>{date}</span>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default DollCard;","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\actions\\types.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\reducers\\filtersReducer.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\reducers\\dollsReducer.js",["103"],"import {\r\n    FETCH_DOLLS,\r\n    SEARCH_DOLLS,\r\n    FETCH_DOLL,\r\n    FILTER_DOLLS\r\n} from \"../actions/types\";\r\nimport data from \"../data/kukuclara.json\";\r\nimport Pluralize from \"pluralize\";\r\nimport { START_YEAR as startYear, END_YEAR as endYear } from \"../common/util\";\r\n\r\nconst loadedData = JSON.parse(JSON.stringify(data));\r\n\r\n// Function to set primary key(id) to OBJ key\r\nconst parseObjWithKeys = (dolls) => {\r\n    const dollObj = {};\r\n    dolls.forEach(doll => dollObj[doll.id] = doll);\r\n    return dollObj;\r\n}\r\n\r\nconst searchDollWithTerm = (doll, term) => {\r\n    const { type, series, name } = doll;\r\n    const fullname = `${series} ${name} ${type}`;\r\n    return fullname.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n};\r\n\r\nexport default (state = [], action) => {\r\n    switch (action.type) {\r\n        case FETCH_DOLLS:\r\n            const fetchedDolls = parseObjWithKeys(loadedData);\r\n            return { ...fetchedDolls };\r\n        case SEARCH_DOLLS:\r\n            const { term } = action.payload;\r\n            if (typeof term === \"undefined\") return parseObjWithKeys(loadedData);\r\n            const foundDolls = loadedData.filter(doll => searchDollWithTerm(doll, term));\r\n            return { ...parseObjWithKeys(foundDolls) };\r\n        case FILTER_DOLLS:\r\n            const submitData = action.payload;\r\n            const { filterGroups } = submitData; // Get the name(label) of checkbox (group) fields from submit data\r\n            const selectedFilterGroups = []; // data from checkboxes\r\n            const selectcedFilters = []; // data from other fields\r\n\r\n            for (const key in submitData) {\r\n                // Get data from filter(checkbox) groups\r\n                if (filterGroups.indexOf(key) > -1) {\r\n                    selectedFilterGroups.push(key);\r\n                } else {\r\n                    selectcedFilters.push(key);\r\n                }\r\n            }\r\n\r\n            // TODO: Make it less complecated(if possible😭)\r\n            // Retrieve the loaded doll data to filter it\r\n            const filteredDolls = loadedData.filter(doll => {\r\n\r\n                // Data from normal fields\r\n                const matchedKeysFromFilters = [];\r\n\r\n                if (selectcedFilters.includes(\"term\") && !searchDollWithTerm(doll, submitData.term)) matchedKeysFromFilters.push(\"term\");\r\n\r\n                if (selectcedFilters.includes(\"yearFrom\") || selectcedFilters.includes(\"yearTo\")) {\r\n                    const { yearFrom = startYear } = submitData;\r\n                    const { yearTo = endYear } = submitData;\r\n                    // Filter data by year\r\n                    const { date } = doll;\r\n                    const releasedYear = parseInt(date);\r\n                    if (yearFrom > releasedYear || yearTo < releasedYear) {\r\n                        matchedKeysFromFilters.push(\"yearFrom\", \"yearTo\");\r\n                    }\r\n                }\r\n\r\n                // Data from filter(checkbox) groups\r\n                const matchedKeysFromFilterGroups = selectedFilterGroups.filter(keyName => {\r\n                    // Change/Match to the loaded object\"s(dolls) property name(e.g. types => typeCode)\r\n                    const parsedKeyName = `${(Pluralize.isSingular(keyName)) ? keyName : Pluralize.singular(keyName)}Code`;\r\n                    const codeFromLoadedData = doll[parsedKeyName];\r\n                    const codesFromSubmitData = submitData[keyName];\r\n                    // Check if one is matching at least\r\n                    // In other words, within one category(e.g. skin, hair color) it is OR(union)\r\n                    return codesFromSubmitData.indexOf(codeFromLoadedData) > -1;\r\n                });\r\n\r\n                const matchedKeys = [...matchedKeysFromFilters, ...matchedKeysFromFilterGroups];\r\n                // It is AND(intersection) between different categories\r\n                return matchedKeys.sort().join(\",\") === selectedFilterGroups.sort().join(\",\");\r\n            });\r\n\r\n            return { ...parseObjWithKeys(filteredDolls) };\r\n\r\n        case FETCH_DOLL:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\MenuBar.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Doll\\DollDetailModal.js",["104","105","106","107"],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\common\\util.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Filter\\FilterDropdown.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Filter\\FilterModal.js",["108","109"],"import React from \"react\";\r\nimport Pluralize from \"pluralize\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, change, formValueSelector } from \"redux-form\";\r\nimport { Button, Header, Icon, Modal, Form, Grid, Divider } from \"semantic-ui-react\";\r\nimport { filterDolls } from \"../../actions\";\r\nimport { START_YEAR as startYear, END_YEAR as endYear } from \"../../common/util\";\r\nimport { DropdownField as Dropdown, InputField as Input, CheckboxField as Checkbox } from \"../UI/SemanticField\";\r\n\r\nconst ALL = \"all\";\r\nconst FORM_NAME = \"filterForm\";\r\n\r\nlet FilterModal = props => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const { trigger, filters, selectAllFieldValues, handleSubmit, change } = props;\r\n  const checkboxGroups = Object.keys(filters);\r\n\r\n  const getYearOptions = () => {\r\n    const dropdownItems = [];\r\n    for (let year = startYear; year <= endYear; year++) {\r\n      dropdownItems.push({ key: year, text: year, value: year });\r\n    }\r\n    return dropdownItems;\r\n  };\r\n\r\n  const renderCheckboxGroup = (name, index) => {\r\n\r\n    const groupName = name;\r\n    const groupIndex = index;\r\n    const currentGroup = filters[groupName];\r\n\r\n    const renderLabelName = (name) => {\r\n      let newName = name.replace(/([A-Z])/g, \" $1\").replace(/^./, str => str.toUpperCase());\r\n      return (Pluralize.isSingular(newName)) ? newName : Pluralize.singular(newName);\r\n    };\r\n\r\n    const renderField = ({ filter: { code, name }, i }) => {\r\n      return (\r\n        <Field\r\n          key={i}\r\n          label={name}\r\n          component={Checkbox}\r\n          name={`${groupName}[${code}]`}\r\n        />\r\n      );\r\n    };\r\n\r\n    const renderSelectAllField = () => {\r\n      const changeAllValues = () => {\r\n        const codes = currentGroup.map(field => field.code);\r\n        const currentValue = selectAllFieldValues[groupName]?.all;\r\n        codes.forEach(code => change(`${groupName}.${code}`, !currentValue));\r\n      };\r\n\r\n      return (\r\n        <Field\r\n          label=\"All\"\r\n          component={Checkbox}\r\n          name={`${groupName}[${ALL}]`}\r\n          onClick={() => changeAllValues()}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Form.Group inline key={groupIndex}>\r\n        <label>{renderLabelName(groupName)}</label>\r\n        {renderSelectAllField()}\r\n        {currentGroup.map((filter, i) => renderField({ filter, i }))}\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  const onSubmit = data => {\r\n    setOpen(false);\r\n\r\n    const returnObj = {};\r\n    const submitDataKeys = Object.keys(data);\r\n\r\n    submitDataKeys.forEach(key => {\r\n      const submitValue = data[key];\r\n      // If a value from checkboxes\r\n      if (checkboxGroups.indexOf(key) > -1) {\r\n        // Filter true value\r\n        const checkboxValues = Object.keys(submitValue).filter(field => submitValue[field]);\r\n        // if there is any true value, then put it in obj for return\r\n        if (checkboxValues.length > 0) returnObj[key] = checkboxValues;\r\n      } else {\r\n        // when it is not from checkboxes, no need the upper process\r\n        returnObj[key] = submitValue;\r\n      }\r\n    });\r\n\r\n    returnObj.filterGroups = checkboxGroups;\r\n\r\n    props.filterDolls(returnObj);\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      closeIcon\r\n      open={open}\r\n      trigger={trigger}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      size=\"small\"\r\n    >\r\n      <Header icon=\"filter\" content=\"Advanced filter\" />\r\n      <Modal.Content>\r\n        <Form id=\"filterForm\" onSubmit={handleSubmit(onSubmit)}>\r\n          <Field component={Input} name=\"term\" label=\"Search\" placeholder=\"Search...\" />\r\n          <Form.Group widths=\"equal\">\r\n            <Field\r\n              name=\"yearFrom\"\r\n              component={Dropdown}\r\n              options={getYearOptions()}\r\n              label=\"Released from\"\r\n            />\r\n            <Field\r\n              name=\"yearTo\"\r\n              component={Dropdown}\r\n              options={getYearOptions()}\r\n              label=\"Released to\"\r\n            />\r\n          </Form.Group>\r\n          {checkboxGroups.map((group, i) => renderCheckboxGroup(group, i))}\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color=\"red\" onClick={() => setOpen(false)}>\r\n          <Icon name=\"remove\" /> Close\r\n        </Button>\r\n        <Button color=\"green\" form=\"filterForm\" key=\"submit\" htmltype=\"submit\">\r\n          <Icon name=\"checkmark\" /> OK\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal >\r\n  )\r\n}\r\n\r\nconst selector = formValueSelector(FORM_NAME);\r\n\r\nconst mapStateToProps = state => {\r\n  const selectAllFieldNames = Object.keys(state.filters).map(key => `${key}[${ALL}]`);\r\n  return { filters: state.filters, selectAllFieldValues: selector(state, ...selectAllFieldNames) };\r\n};\r\n\r\nFilterModal = reduxForm({ form: FORM_NAME })(FilterModal);\r\n\r\nFilterModal = connect(mapStateToProps, { filterDolls, change })(FilterModal);\r\n\r\nexport default FilterModal;","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\SemanticField.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\DefaultModal.js",["110","111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":15},{"ruleId":"116","severity":1,"message":"120","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":20},{"ruleId":"112","replacedBy":"121"},{"ruleId":"114","replacedBy":"122"},{"ruleId":"116","severity":1,"message":"123","line":2,"column":16,"nodeType":"118","messageId":"119","endLine":2,"endColumn":20},{"ruleId":"124","severity":1,"message":"125","line":26,"column":1,"nodeType":"126","endLine":94,"endColumn":3},{"ruleId":"116","severity":1,"message":"127","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":16},{"ruleId":"116","severity":1,"message":"123","line":2,"column":40,"nodeType":"118","messageId":"119","endLine":2,"endColumn":44},{"ruleId":"116","severity":1,"message":"128","line":7,"column":11,"nodeType":"118","messageId":"119","endLine":7,"endColumn":20},{"ruleId":"116","severity":1,"message":"129","line":7,"column":47,"nodeType":"118","messageId":"119","endLine":7,"endColumn":51},{"ruleId":"116","severity":1,"message":"130","line":5,"column":45,"nodeType":"118","messageId":"119","endLine":5,"endColumn":49},{"ruleId":"116","severity":1,"message":"131","line":5,"column":51,"nodeType":"118","messageId":"119","endLine":5,"endColumn":58},{"ruleId":"116","severity":1,"message":"132","line":2,"column":18,"nodeType":"118","messageId":"119","endLine":2,"endColumn":24},{"ruleId":"116","severity":1,"message":"133","line":2,"column":26,"nodeType":"118","messageId":"119","endLine":2,"endColumn":31},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","'selectSong' is defined but never used.",["134"],["135"],"'Icon' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'specialYn' is assigned a value but never used.","'date' is assigned a value but never used.","'Grid' is defined but never used.","'Divider' is defined but never used.","'Header' is defined but never used.","'Image' is defined but never used.","no-global-assign","no-unsafe-negation"]