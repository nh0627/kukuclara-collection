[{"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\index.js":"1","C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\actions\\index.js":"2","C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\reducers\\index.js":"3","C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\components\\App.js":"4","C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\components\\SongList.js":"5","C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\components\\SongDetail.js":"6","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\index.js":"7","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\App.js":"8","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\reducers\\index.js":"9","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\actions\\index.js":"10","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Doll\\DollList.js":"11","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Doll\\DollCard.js":"12","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\actions\\types.js":"13","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\reducers\\filtersReducer.js":"14","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\reducers\\dollsReducer.js":"15","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\MenuBar.js":"16","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Doll\\DollDetailModal.js":"17","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\common\\util.js":"18","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Filter\\FilterDropdown.js":"19","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Filter\\FilterModal.js":"20","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\Field.js":"21","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\DefaultModal.js":"22","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\Loader.js":"23"},{"size":334,"mtime":1607457773223,"results":"24","hashOfConfig":"25"},{"size":162,"mtime":1607457832325,"results":"26","hashOfConfig":"25"},{"size":498,"mtime":1607457762857,"results":"27","hashOfConfig":"25"},{"size":234,"mtime":1607457897605,"results":"28","hashOfConfig":"25"},{"size":949,"mtime":1607459921315,"results":"29","hashOfConfig":"25"},{"size":482,"mtime":1607461169585,"results":"30","hashOfConfig":"25"},{"size":347,"mtime":1610647899588,"results":"31","hashOfConfig":"32"},{"size":583,"mtime":1610919613314,"results":"33","hashOfConfig":"32"},{"size":352,"mtime":1610647275752,"results":"34","hashOfConfig":"32"},{"size":460,"mtime":1609804412603,"results":"35","hashOfConfig":"32"},{"size":841,"mtime":1610647899574,"results":"36","hashOfConfig":"32"},{"size":1011,"mtime":1610647899532,"results":"37","hashOfConfig":"32"},{"size":172,"mtime":1609190388689,"results":"38","hashOfConfig":"32"},{"size":559,"mtime":1610911778006,"results":"39","hashOfConfig":"32"},{"size":4149,"mtime":1610911779315,"results":"40","hashOfConfig":"32"},{"size":1133,"mtime":1610914830070,"results":"41","hashOfConfig":"32"},{"size":798,"mtime":1610902008321,"results":"42","hashOfConfig":"32"},{"size":240,"mtime":1610902168258,"results":"43","hashOfConfig":"32"},{"size":2074,"mtime":1610917773552,"results":"44","hashOfConfig":"32"},{"size":4748,"mtime":1610917540949,"results":"45","hashOfConfig":"32"},{"size":969,"mtime":1610910871022,"results":"46","hashOfConfig":"32"},{"size":854,"mtime":1610901852276,"results":"47","hashOfConfig":"32"},{"size":249,"mtime":1610919629519,"results":"48","hashOfConfig":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"vw7sas",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"n1kal4",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\index.js",[],["100","101"],"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\actions\\index.js",[],"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\reducers\\index.js",[],"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\components\\App.js",["102","103"],"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\components\\SongList.js",[],"C:\\Users\\NH\\Desktop\\repo\\learn-react\\songs\\src\\components\\SongDetail.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\index.js",[],["104","105"],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\App.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\reducers\\index.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\actions\\index.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Doll\\DollList.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Doll\\DollCard.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\actions\\types.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\reducers\\filtersReducer.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\reducers\\dollsReducer.js",["106"],"import {\r\n    FETCH_DOLLS,\r\n    SEARCH_DOLLS,\r\n    FETCH_DOLL,\r\n    FILTER_DOLLS\r\n} from \"../actions/types\";\r\nimport data from \"../data/kukuclara.json\";\r\nimport Pluralize from \"pluralize\";\r\nimport { START_YEAR, END_YEAR } from \"../common/util\";\r\n\r\nconst loadedData = JSON.parse(JSON.stringify(data));\r\n\r\n// Function to set primary key(id) to OBJ key\r\nconst parseObjWithKeys = (dolls) => {\r\n    const dollObj = {};\r\n    dolls.forEach(doll => dollObj[doll.id] = doll);\r\n    return dollObj;\r\n}\r\n\r\nconst searchDollWithTerm = (doll, term) => {\r\n    const { type, series, name } = doll;\r\n    const fullname = `${series} ${name} ${type}`;\r\n    return fullname.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n};\r\n\r\nexport default (state = [], action) => {\r\n    switch (action.type) {\r\n        case FETCH_DOLLS:\r\n            const fetchedDolls = parseObjWithKeys(loadedData);\r\n            return { ...fetchedDolls };\r\n        case SEARCH_DOLLS:\r\n            const { term } = action.payload;\r\n            if (typeof term === \"undefined\") return parseObjWithKeys(loadedData);\r\n            const foundDolls = loadedData.filter(doll => searchDollWithTerm(doll, term));\r\n            return { ...parseObjWithKeys(foundDolls) };\r\n        case FILTER_DOLLS:\r\n            const submitData = action.payload;\r\n            const { filterGroups } = submitData; // Get the name(label) of checkbox (group) fields from submit data\r\n            const selectedFilterGroups = []; // data from checkboxes\r\n            const selectcedFilters = []; // data from other fields\r\n\r\n            for (const key in submitData) {\r\n                // Get data from filter(checkbox) groups\r\n                if (filterGroups.indexOf(key) > -1) {\r\n                    selectedFilterGroups.push(key);\r\n                } else {\r\n                    selectcedFilters.push(key);\r\n                }\r\n            }\r\n\r\n            // TODO: Make it less complecated(if possibleðŸ˜­)\r\n            // Retrieve the loaded doll data to filter it\r\n            const filteredDolls = loadedData.filter(doll => {\r\n\r\n                // Data from normal fields\r\n                const matchedKeysFromFilters = [];\r\n\r\n                if (selectcedFilters.includes(\"term\") && !searchDollWithTerm(doll, submitData.term)) matchedKeysFromFilters.push(\"term\");\r\n\r\n                if (selectcedFilters.includes(\"yearFrom\") || selectcedFilters.includes(\"yearTo\")) {\r\n                    const { yearFrom = START_YEAR } = submitData;\r\n                    const { yearTo = END_YEAR } = submitData;\r\n                    // Filter data by year\r\n                    const { date } = doll;\r\n                    const releasedYear = parseInt(date);\r\n                    if (yearFrom > releasedYear || yearTo < releasedYear) {\r\n                        matchedKeysFromFilters.push(\"yearFrom\", \"yearTo\");\r\n                    }\r\n                }\r\n\r\n                // Data from filter(checkbox) groups\r\n                const matchedKeysFromFilterGroups = selectedFilterGroups.filter(keyName => {\r\n                    // Change/Match to the loaded object\"s(dolls) property name(e.g. types => typeCode)\r\n                    const parsedKeyName = `${(Pluralize.isSingular(keyName)) ? keyName : Pluralize.singular(keyName)}Code`;\r\n                    const codeFromLoadedData = doll[parsedKeyName];\r\n                    const codesFromSubmitData = submitData[keyName];\r\n                    // Check if one is matching at least\r\n                    // In other words, within one category(e.g. skin, hair color) it is OR(union)\r\n                    return codesFromSubmitData.indexOf(codeFromLoadedData) > -1;\r\n                });\r\n\r\n                const matchedKeys = [...matchedKeysFromFilters, ...matchedKeysFromFilterGroups];\r\n                // It is AND(intersection) between different categories\r\n                return matchedKeys.sort().join(\",\") === selectedFilterGroups.sort().join(\",\");\r\n            });\r\n\r\n            return { ...parseObjWithKeys(filteredDolls) };\r\n\r\n        case FETCH_DOLL:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\MenuBar.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Doll\\DollDetailModal.js",["107","108"],"import React from \"react\";\r\nimport { Header, Image, Modal } from \"semantic-ui-react\";\r\nimport DefaultModal from \"../UI/DefaultModal\";\r\n\r\nconst DollDetailModal = ({doll, trigger}) => {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const { isSpecialCode, img, name, type, series, date } = doll;\r\n\r\n  return (\r\n    <DefaultModal header={{content: \"Details\", icon: null }} trigger={trigger} open={open} setOpen={setOpen}>\r\n      <Modal.Content image>\r\n        <Image size=\"medium\" src={img} wrapped />\r\n        <Modal.Description>\r\n          <Header>{name} {type}</Header>\r\n          <p>\r\n            {series}\r\n          </p>\r\n          <p>Is it okay to use this photo?</p>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n    </DefaultModal>\r\n\r\n  )\r\n}\r\n\r\nexport default DollDetailModal;","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\common\\util.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Filter\\FilterDropdown.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\Filter\\FilterModal.js",["109"],"import React from \"react\";\r\nimport Pluralize from \"pluralize\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, change, formValueSelector } from \"redux-form\";\r\nimport { Button, Icon, Modal, Form } from \"semantic-ui-react\";\r\nimport { filterDolls } from \"../../actions\";\r\nimport { START_YEAR as startYear, END_YEAR as endYear } from \"../../common/util\";\r\nimport { DropdownField as Dropdown, InputField as Input, CheckboxField as Checkbox } from \"../UI/Field\";\r\nimport DefaultModal from \"../UI/DefaultModal\";\r\n\r\nlet FilterModal = props => {\r\n  const { trigger, filters, handleSubmit, change, open, setOpen } = props;\r\n  // const [open, setOpen] = React.useState(false);\r\n  const checkboxGroups = Object.keys(filters);\r\n\r\n  const getYearOptions = () => {\r\n    const dropdownItems = [];\r\n    for (let year = startYear; year <= endYear; year++) {\r\n      dropdownItems.push({ key: year, text: year, value: year });\r\n    }\r\n    return dropdownItems;\r\n  };\r\n\r\n  const renderCheckboxGroup = (groupName, groupIndex) => {\r\n    const currentGroup = filters[groupName];\r\n\r\n    const renderLabelName = name => {\r\n      const spacedName = name.replace(/([A-Z])/g, \" $1\");\r\n      let newName = `${spacedName.charAt(0).toUpperCase() + spacedName.slice(1).toLowerCase()}`.replace(\"groups\", \"\");\r\n      return (Pluralize.isSingular(newName)) ? newName : Pluralize.singular(newName);\r\n    };\r\n\r\n    const renderField = ({ filter: { code, name }, i }) => {\r\n      return (\r\n        <Field\r\n          key={i}\r\n          label={name}\r\n          component={Checkbox}\r\n          name={`${groupName}[${code}]`}\r\n        />\r\n      );\r\n    };\r\n\r\n    const renderSelectAllField = () => {\r\n      const changeAllValues = e => {\r\n        const codes = currentGroup.map(field => field.code);\r\n        const currentValue = e.currentTarget.childNodes[0].checked;\r\n        codes.forEach(code => change(`${groupName}.${code}`, !currentValue));\r\n      };\r\n\r\n      return (\r\n        <Field\r\n          label=\"All\"\r\n          component={Checkbox}\r\n          name={`${groupName}[\"all\"]`}\r\n          onClick={changeAllValues}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Form.Group inline key={groupIndex}>\r\n        <label>{renderLabelName(groupName)}</label>\r\n        {renderSelectAllField()}\r\n        {currentGroup.map((filter, i) => renderField({ filter, i }))}\r\n      </Form.Group>\r\n    );\r\n  };\r\n\r\n  const onSubmit = data => {\r\n    setOpen(false);\r\n\r\n    const returnObj = {};\r\n    const submitDataKeys = Object.keys(data);\r\n\r\n    submitDataKeys.forEach(key => {\r\n      const submitValue = data[key];\r\n      // If a value from checkboxes\r\n      if (checkboxGroups.indexOf(key) > -1) {\r\n        // Filter true value\r\n        const checkboxValues = Object.keys(submitValue).filter(field => submitValue[field]);\r\n        // if there is any true value, then put it in obj for return\r\n        if (checkboxValues.length > 0) returnObj[key] = checkboxValues;\r\n      } else {\r\n        // when it is not from checkboxes, no need the upper process\r\n        returnObj[key] = submitValue;\r\n      }\r\n    });\r\n\r\n    returnObj.filterGroups = checkboxGroups;\r\n\r\n    props.filterDolls(returnObj);\r\n  }\r\n\r\n  const modalActions = (\r\n    <Modal.Actions>\r\n      <Button color=\"red\" onClick={() => setOpen(false)}>\r\n        <Icon name=\"remove\" /> Close\r\n      </Button>\r\n      <Button color=\"green\" form=\"filterForm\" key=\"submit\" htmltype=\"submit\">\r\n        <Icon name=\"checkmark\" /> OK\r\n      </Button>\r\n    </Modal.Actions>\r\n  );\r\n\r\n  return (\r\n    <DefaultModal\r\n      header={{ content: \"Advanced filter\", icon: \"filter\" }}\r\n      trigger={trigger}\r\n      actions={modalActions}\r\n      open={open} setOpen={setOpen}>\r\n      <Modal.Content>\r\n        <Form id=\"filterForm\" onSubmit={handleSubmit(onSubmit)}>\r\n          <Field component={Input} name=\"term\" label=\"Search\" placeholder=\"Search...\" />\r\n          <Form.Group widths=\"equal\">\r\n            <Field\r\n              name=\"yearFrom\"\r\n              component={Dropdown}\r\n              options={getYearOptions()}\r\n              label=\"Released from\"\r\n            />\r\n            <Field\r\n              name=\"yearTo\"\r\n              component={Dropdown}\r\n              options={getYearOptions()}\r\n              label=\"Released to\"\r\n            />\r\n          </Form.Group>\r\n          {checkboxGroups.map((group, i) => renderCheckboxGroup(group, i))}\r\n        </Form>\r\n      </Modal.Content>\r\n    </DefaultModal >\r\n  )\r\n}\r\n\r\nconst selector = formValueSelector(\"filterForm\");\r\n\r\nconst mapStateToProps = state => {\r\n  return { filters: state.filters };\r\n};\r\n\r\nFilterModal = reduxForm({ form: \"filterForm\" })(FilterModal);\r\n\r\nFilterModal = connect(mapStateToProps, { filterDolls, change })(FilterModal);\r\n\r\nexport default FilterModal;","C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\Field.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\DefaultModal.js",[],"C:\\Users\\NH\\Desktop\\repo\\kukuclara\\src\\components\\UI\\Loader.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":15},{"ruleId":"114","severity":1,"message":"118","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":20},{"ruleId":"110","replacedBy":"119"},{"ruleId":"112","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":26,"column":1,"nodeType":"123","endLine":94,"endColumn":3},{"ruleId":"114","severity":1,"message":"124","line":8,"column":11,"nodeType":"116","messageId":"117","endLine":8,"endColumn":24},{"ruleId":"114","severity":1,"message":"125","line":8,"column":51,"nodeType":"116","messageId":"117","endLine":8,"endColumn":55},{"ruleId":"114","severity":1,"message":"126","line":136,"column":7,"nodeType":"116","messageId":"117","endLine":136,"endColumn":15},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","'selectSong' is defined but never used.",["127"],["128"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'isSpecialCode' is assigned a value but never used.","'date' is assigned a value but never used.","'selector' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]